@use 'variables' as *;

/**
 * Mixins
 * Reusable style patterns
 */

/**
 * Metric Card Mixin
 * Creates a metric card with icon, value, label, and decorative corner dots
 *
 */
@mixin metric-card(
  $min-width: 270px,
  $min-height: 130px,
  $content-min-height: 9rem,
  $padding: $space-12,
  $border-color: $color-blue-200,
  $border-width: 0.12rem,
  $bg-color: $color-white-alpha,
  $icon-size: 1.5rem,
  $value-color: $color-blue-400,
  $value-font-size: $type-size-base,
  $label-color: $color-neutral-light,
  $label-font-size: $type-size-xs
) {
  position: relative;
  min-width: $min-width;
  // min-height: $min-height;
  min-height: $content-min-height;

  .cs-metric-content {
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content:flex-start ;
    gap: 0.5rem;
    height: 100%;
    min-height: $content-min-height;
    padding: $padding;
    background-color: $bg-color;
    overflow: hidden;
    position: relative;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    box-shadow: 4px 4px 4px $color-shadows;

  }

  .cs-metric-border {
    position: absolute;
    inset: 0;
    border: $border-width solid $border-color;
    pointer-events: none;
    border-radius: 0;
    // min-height: 9rem;
  }

  &:hover .cs-metric-content {
    transform: translateY(-1px);
    box-shadow: 6px 6px 1px $color-blue-alpha;
  }

  .cs-metric-icon-wrapper {
    position: relative;
    overflow: hidden;
    width: 24px;
    height: 24px;
    flex-shrink: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 0.5rem;
  }

  .cs-metric-icon {
    font-size: $icon-size;
    color: $value-color;
    line-height: 1;
  }

  .cs-metric-value {
    font-family: $font-bricolage;
    font-weight: $font-weight-medium;
    font-size: $value-font-size;
    line-height: 1.21;
    color: $value-color;
    text-align: center;
    white-space: nowrap;
    position: relative;
    flex-shrink: 0;
    width: 100%;
    margin-bottom: 0.5rem;
    font-variation-settings: 'opsz' 14, 'wdth' 100;
  }

  .cs-metric-label {
    font-family: $font-bricolage;
    font-weight: $font-weight-light;
    font-size: $label-font-size;
    line-height: 1.1;
    color: $label-color;
    text-align: center;
    width: 100%;
    position: relative;
    flex-shrink: 0;
    font-variation-settings: 'opsz' 14, 'wdth' 100;
  }

  // Corner Dots
  .cs-metric-dot {
    position: absolute;
    width: 10px;
    height: 10px;
    
    svg {
      display: block;
      width: 100%;
      height: 100%;
      fill: $color-white;
      stroke:$border-color;
      stroke-width: $border-width;

    }

    &.dot-bottom-right {
      bottom: -5px;
      right: -5px;
    }

    &.dot-top-right {
      top: -5px;
      right: -5px;
    }

    &.dot-bottom-left {
      bottom: -5px;
      left: -5px;
    }

    &.dot-top-left {
      top: -5px;
      left: -5px;
    }
  }
}
